How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By knowing the changes made in two commits and identfying the change which led us to the bug. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    This helps us to track our mistakes easily by comparing and reducing the time to program 
    each project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The one advantage is avoiding too many version,even if not required when using auto-save,
    therby cluttering the history. And disadvantage is  for the people who are forgetful, and
    forget to save impotant commits time to time. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    So as to enhance working on related files.

How can you use the commands git log and git diff to view the history of files?

    Git log is just to know the different commits made, at different time instances with their 
    unique commit id, whereas git diff is used to find the differnces within two commits by comparing 
    them line by line. 

How might using version control make you more confident to make changes that
could break something?

    As it prevents the risk of loosing any previous versions written, as there is always an option of 
    restoring back our code.

Now that you have your workspace set up, what do you want to try using Git for?

    I would like to use git for working on my projects more freely without any risk of loosing my previous work.